{"version":3,"sources":["components/Nav.js","components/messages/Message.js","components/messages/InfoMessage.js","components/messages/ErrorMessage.js","components/Form/BirthField.js","components/Form/DeathField.js","components/Form/LivedFields.js","components/Form/index.js","functions/index.js","components/Selector.js","App.js","serviceWorker.js","index.js"],"names":["Nav","react_default","a","createElement","className","role","aria-label","Message","concat","this","props","styleName","onClick","closeHandler","message","Component","InfoMessage","Message_Message","ErrorMessage","BirthField","htmlFor","type","name","id","max","death","value","birth","onChange","DeathField","min","LivedFields","inputMode","pattern","lived","years","months","days","Form","state","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","submitForm","bind","assertThisInitialized","inputChange","livedChange","e","target","setState","defineProperty","updatedLived","objectSpread","preventDefault","born","died","birthDate","deathDate","moment","yearsLived","diff","monthsLived","subtract","daysLived","calculateTimeLived","time","timeLived","add","format","calculateDeathDate","calculateBirthDate","submitHandler","errorHandler","onSubmit","Selector","checked","App","error","setMessage","setError","closeError","closeMessage","formSubmit","msg","components","checkboxes","querySelectorAll","fields","forEach","checkbox","ErrorMessage_ErrorMessage","Selector_Selector","InfoMessage_InfoMessage","Form_Form","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yRAEe,SAASA,IACpB,OACIC,EAAAC,EAAAC,cAAA,OACIC,UAAU,kBACVC,KAAK,aACLC,aAAW,mBAEXL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,2BCTCG,mLAEjB,OACEN,EAAAC,EAAAC,cAAA,WAASC,UAAS,WAAAI,OAAaC,KAAKC,MAAMC,YACxCV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,UACEC,UAAU,SACVE,aAAW,SACXM,QAASH,KAAKC,MAAMG,gBAGxBZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBK,KAAKC,MAAMI,iBAZbC,aCChBC,mLAEjB,OACEf,EAAAC,EAAAC,cAACc,EAAD,CACEN,UAAU,UACVG,QAASL,KAAKC,MAAMI,QACpBD,aAAcJ,KAAKC,MAAMG,sBANQE,aCApBG,mLAEjB,OACEjB,EAAAC,EAAAC,cAACc,EAAD,CACEN,UAAU,YACVG,QAASL,KAAKC,MAAMI,QACpBD,aAAcJ,KAAKC,MAAMG,sBANSE,aCD3B,SAASI,EAAWT,GACjC,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAOiB,QAAQ,QAAQhB,UAAU,mBAAjC,SAGAH,EAAAC,EAAAC,cAAA,SACEkB,KAAK,OACLC,KAAK,QACLC,GAAG,QACHC,IAAKd,EAAMe,MACXC,MAAOhB,EAAMiB,MACbC,SAAUlB,EAAMkB,SAChBxB,UAAU,WCbH,SAASyB,EAAWnB,GACjC,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAOiB,QAAQ,OAAOhB,UAAU,mBAAhC,SAGAH,EAAAC,EAAAC,cAAA,SACEkB,KAAK,OACLC,KAAK,QACLC,GAAG,QACHO,IAAKpB,EAAMiB,MACXD,MAAOhB,EAAMe,MACbG,SAAUlB,EAAMkB,SAChBxB,UAAU,WCbH,SAAS2B,EAAYrB,GAClC,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAOiB,QAAQ,QAAQhB,UAAU,mBAAjC,gBAGAH,EAAAC,EAAAC,cAAA,SACEkB,KAAK,SACLW,UAAU,UACVC,QAAQ,SACRX,KAAK,QACLC,GAAG,aACHG,MAAOhB,EAAMwB,MAAMC,MACnBP,SAAUlB,EAAMkB,SAChBxB,UAAU,QACV0B,IAAI,OAGR7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAOiB,QAAQ,SAAShB,UAAU,mBAAlC,iBAGAH,EAAAC,EAAAC,cAAA,SACEkB,KAAK,SACLW,UAAU,UACVC,QAAQ,SACRX,KAAK,SACLC,GAAG,cACHG,MAAOhB,EAAMwB,MAAME,OACnBR,SAAUlB,EAAMkB,SAChBxB,UAAU,QACV0B,IAAI,IACJN,IAAI,QAGRvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAOiB,QAAQ,YAAYhB,UAAU,mBAArC,eAGAH,EAAAC,EAAAC,cAAA,SACEkB,KAAK,SACLW,UAAU,UACVC,QAAQ,SACRX,KAAK,OACLC,GAAG,YACHG,MAAOhB,EAAMwB,MAAMG,KACnBT,SAAUlB,EAAMkB,SAChBxB,UAAU,QACV0B,IAAI,IACJN,IAAI,6BC1COc,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAhC,KAAA6B,IACjBE,EAAAC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAH,GAAAO,KAAApC,KAAM8B,KACDO,WAAaN,EAAKM,WAAWC,KAAhBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAClBA,EAAKS,YAAcT,EAAKS,YAAYF,KAAjBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACnBA,EAAKU,YAAcV,EAAKU,YAAYH,KAAjBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACnBA,EAAKD,MAAQ,CACXZ,MAAO,GACPF,MAAO,GACPS,MAAO,CACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,KAXOG,2EAgBPW,GACV,IAAM7B,EAAO6B,EAAEC,OAAO9B,KACtBb,KAAK4C,SAALZ,OAAAa,EAAA,EAAAb,CAAA,GACGnB,EAAO6B,EAAEC,OAAO1B,4CAITyB,GACV,IAAM7B,EAAO6B,EAAEC,OAAO9B,KAChBiC,EAAYd,OAAAe,EAAA,EAAAf,CAAA,GAAQhC,KAAK8B,MAAML,MAAnBO,OAAAa,EAAA,EAAAb,CAAA,GAA2BnB,EAAO6B,EAAEC,OAAO1B,QAE7DjB,KAAK4C,SAAS,CACZnB,MAAOqB,uCAIAJ,GAET,IAAIrC,EADJqC,EAAEM,kBAGqB,IAApBhD,KAAKC,MAAMgD,MACS,IAApBjD,KAAKC,MAAMiD,MACS,KAApBlD,KAAK8B,MAAMmB,MAAoC,KAArBjD,KAAK8B,MAAMd,OAEtCX,ECjD4B,SAAC8C,EAAWC,GAC1C,IAAMlC,EAAQmC,IAAOF,GACfnC,EAAQqC,IAAOD,GACfE,EAAatC,EAAMuC,KAAKrC,EAAO,SAC/BsC,EAAcxC,EACfyC,SAASH,EAAY,SACrBC,KAAKrC,EAAO,UACXwC,EAAY1C,EACbyC,SAASD,EAAa,UACtBD,KAAKrC,EAAO,QACjB,mBAAAnB,OAAoBuD,EAApB,YAAAvD,OAAyCyD,EAAzC,iBAAAzD,OAAoE2D,EAApE,UDuCYC,CAAmB3D,KAAK8B,MAAMZ,MAAOlB,KAAK8B,MAAMd,QAErC,IAApBhB,KAAKC,MAAMgD,MACS,IAApBjD,KAAKC,MAAM2D,MACS,KAApB5D,KAAK8B,MAAMmB,MACiB,KAA3BjD,KAAK8B,MAAML,MAAMC,OACW,KAA5B1B,KAAK8B,MAAML,MAAME,QACS,KAA1B3B,KAAK8B,MAAML,MAAMG,MAEnBvB,EC7C4B,SAAC8C,EAAWU,GAC1C,IAAM7C,EAAQqC,IAAOF,GAChBW,IAAID,EAAUnC,MAAO,SACrBoC,IAAID,EAAUlC,OAAQ,UACtBmC,IAAID,EAAUjC,KAAM,QACpBmC,OAAO,sBACZ,iBAAAhE,OAAkBiB,EAAlB,KDuCYgD,CAAmBhE,KAAK8B,MAAMZ,MAAOlB,KAAK8B,MAAML,QAErC,IAApBzB,KAAKC,MAAMiD,MACS,IAApBlD,KAAKC,MAAM2D,MACU,KAArB5D,KAAK8B,MAAMd,OACiB,KAA3BhB,KAAK8B,MAAML,MAAMC,OACW,KAA5B1B,KAAK8B,MAAML,MAAME,QACS,KAA1B3B,KAAK8B,MAAML,MAAMG,QAEnBvB,EC7C4B,SAAC+C,EAAWS,GAC1C,IACM3C,EADQmC,IAAOD,GAEhBK,SAASI,EAAUnC,MAAO,SAC1B+B,SAASI,EAAUlC,OAAQ,UAC3B8B,SAASI,EAAUjC,KAAM,QACzBmC,OAAO,sBACZ,iBAAAhE,OAAkBmB,EAAlB,KDsCY+C,CAAmBjE,KAAK8B,MAAMd,MAAOhB,KAAK8B,MAAML,QAExDpB,GACFL,KAAK4C,SAAS,CACZ1B,MAAO,GACPF,MAAO,GACPS,MAAO,CACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,MAGV5B,KAAKC,MAAMiE,cAAc7D,IAEzBL,KAAKC,MAAMkE,aAAX,+DAKF,OACE3E,EAAAC,EAAAC,cAAA,QAAM0E,SAAUpE,KAAKqC,YACnB7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACQ,IAApBK,KAAKC,MAAMgD,MACVzD,EAAAC,EAAAC,cAACgB,EAAD,CACEQ,MAAOlB,KAAK8B,MAAMZ,MAClBF,MAAOhB,KAAK8B,MAAMd,MAClBG,SAAUnB,KAAKwC,eAGE,IAApBxC,KAAKC,MAAMiD,MACV1D,EAAAC,EAAAC,cAAC0B,EAAD,CACEF,MAAOlB,KAAK8B,MAAMZ,MAClBF,MAAOhB,KAAK8B,MAAMd,MAClBG,SAAUnB,KAAKwC,gBAKvBhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACQ,IAApBK,KAAKC,MAAM2D,MACVpE,EAAAC,EAAAC,cAAC4B,EAAD,CAAaG,MAAOzB,KAAK8B,MAAML,MAAON,SAAUnB,KAAKyC,eAGzDjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SACEkB,KAAK,SACLK,MAAM,SACNtB,UAAU,sDA3GYW,aERb+D,cACnB,SAAAA,EAAYpE,GAAO,IAAA8B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAqE,IACjBtC,EAAAC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAqC,GAAAjC,KAAApC,KAAMC,KACD6B,MAAQ,CACXmB,KAAMlB,EAAK9B,MAAMgD,KACjBC,KAAMnB,EAAK9B,MAAMiD,KACjBU,KAAM7B,EAAK9B,MAAM2D,MAGnB7B,EAAKS,YAAcT,EAAKS,YAAYF,KAAjBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KARFA,2EAWPW,GACV,IAAM7B,EAAO6B,EAAEC,OAAO9B,KAChBI,EAAQyB,EAAEC,OAAO2B,QACvBtE,KAAK4C,SAALZ,OAAAa,EAAA,EAAAb,CAAA,GACGnB,EAAOI,qCAKV,OACEzB,EAAAC,EAAAC,cAAA,QAAM0E,SAAUpE,KAAKC,MAAMmE,UACzB5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAjB,iCAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,SAAOiB,QAAQ,OAAOhB,UAAU,aAC9BH,EAAAC,EAAAC,cAAA,SACEkB,KAAK,WACLC,KAAK,OACLlB,UAAU,QACV2E,QAAStE,KAAK8B,MAAMmB,KACpB9B,SAAUnB,KAAKwC,cANnB,SAWFhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,SAAOiB,QAAQ,OAAOhB,UAAU,YAC9BH,EAAAC,EAAAC,cAAA,SACEkB,KAAK,WACLC,KAAK,OACLlB,UAAU,QACV2E,QAAStE,KAAK8B,MAAMoB,KACpB/B,SAAUnB,KAAKwC,cANnB,SAWFhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,SAAOiB,QAAQ,OAAOhB,UAAU,YAC9BH,EAAAC,EAAAC,cAAA,SACEkB,KAAK,WACLC,KAAK,OACLlB,UAAU,QACV2E,QAAStE,KAAK8B,MAAM8B,KACpBzC,SAAUnB,KAAKwC,cANnB,gBAYJhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SACEkB,KAAK,SACLK,MAAM,SACNtB,UAAU,mDApEgBW,aCkGvBiE,cA3Fb,SAAAA,EAAYtE,GAAO,IAAA8B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAuE,IACjBxC,EAAAC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAuC,GAAAnC,KAAApC,KAAMC,KACD6B,MAAQ,CACXzB,QAAS,GACTmE,MAAO,GACPvB,MAAM,EACNC,MAAM,EACNU,MAAM,GAER7B,EAAK0C,WAAa1C,EAAK0C,WAAWnC,KAAhBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAClBA,EAAK2C,SAAW3C,EAAK2C,SAASpC,KAAdN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAChBA,EAAK4C,WAAa5C,EAAK4C,WAAWrC,KAAhBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAClBA,EAAK6C,aAAe7C,EAAK6C,aAAatC,KAAlBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACpBA,EAAK8C,WAAa9C,EAAK8C,WAAWvC,KAAhBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAbDA,wEAgBV+C,GACP9E,KAAK4C,SAAS,CAAE4B,MAAOM,uCAGdA,GACT9E,KAAK4C,SAAS,CAAEvC,QAASyE,IACzB9E,KAAK2E,gDAGIjC,GACT1C,KAAK4C,SAAS,CAAE4B,MAAO,0CAGZ9B,GACXA,EAAEM,iBACFhD,KAAK4C,SAAS,CAAEvC,QAAS,wCAGhB0E,GACT/E,KAAK4C,SAAS,CAAEmC,kDAGPrC,GACTA,EAAEM,iBACF,IAAMgC,EAAatC,EAAEC,OAAOsC,iBAAiB,0BACzCC,EAAS,GACbF,EAAWG,QAAQ,SAAAC,GACjBF,EAAMlD,OAAAe,EAAA,EAAAf,CAAA,GAAQkD,EAARlD,OAAAa,EAAA,EAAAb,CAAA,GAAiBoD,EAASvE,KAAOuE,EAASd,aAE9B,IAAhBY,EAAOjC,OAAiC,IAAhBiC,EAAOhC,OAAiC,IAAhBgC,EAAOtB,KACzD5D,KAAK0E,SAAS,mCAEd1E,KAAK2E,aACL3E,KAAK4C,SAASsC,qCAKhB,OACE1F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAAA,WAASC,UAAU,qBACK,KAArBK,KAAK8B,MAAM0C,OACVhF,EAAAC,EAAAC,cAAC2F,EAAD,CACEhF,QAASL,KAAK8B,MAAM0C,MACpBpE,aAAcJ,KAAK2E,aAGvBnF,EAAAC,EAAAC,cAAC4F,EAAD,CACErC,KAAMjD,KAAK8B,MAAMmB,KACjBC,KAAMlD,KAAK8B,MAAMoB,KACjBU,KAAM5D,KAAK8B,MAAM8B,KACjBQ,SAAUpE,KAAK6E,aAEjBrF,EAAAC,EAAAC,cAAA,WACwB,KAAvBM,KAAK8B,MAAMzB,SACVb,EAAAC,EAAAC,cAAC6F,EAAD,CACElF,QAASL,KAAK8B,MAAMzB,QACpBD,aAAcJ,KAAK4E,eAIvBpF,EAAAC,EAAAC,cAAC8F,EAAD,CACEtB,cAAelE,KAAKyE,WACpBN,aAAcnE,KAAK0E,SACnBzB,KAAMjD,KAAK8B,MAAMmB,KACjBC,KAAMlD,KAAK8B,MAAMoB,KACjBU,KAAM5D,KAAK8B,MAAM8B,gBApFXtD,aCIEmF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOvG,EAAAC,EAAAC,cAACsG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ae70f983.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Nav() {\n    return (\n        <nav\n            className=\"navbar is-black\"\n            role=\"navigation\"\n            aria-label=\"main navigation\"\n        >\n            <div className=\"container\">\n                <div className=\"navbar-brand\">\n                    <h1 className=\"navbar-item\">Death Calculator</h1>\n                </div>\n            </div>\n        </nav>\n    )\n}\n","import React, { Component } from \"react\";\n\nexport default class Message extends Component {\n  render() {\n    return (\n      <article className={`message ${this.props.styleName}`}>\n        <div className=\"message-header\">\n          <p>Info</p>\n          <button\n            className=\"delete\"\n            aria-label=\"delete\"\n            onClick={this.props.closeHandler}\n          />\n        </div>\n        <div className=\"message-body\">{this.props.message}</div>\n      </article>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport Message from './Message';\n\nexport default class InfoMessage extends Component {\n  render() {\n    return (\n      <Message\n        styleName=\"is-info\"\n        message={this.props.message}\n        closeHandler={this.props.closeHandler}\n      />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Message from './Message';\n\nexport default class ErrorMessage extends Component {\n  render() {\n    return (\n      <Message\n        styleName=\"is-danger\"\n        message={this.props.message}\n        closeHandler={this.props.closeHandler}\n      />\n    )\n  }\n}\n","import React from \"react\";\n\nexport default function BirthField(props) {\n  return (\n    <div className=\"field\">\n      <label htmlFor=\"birth\" className=\"label is-medium\">\n        Born:\n      </label>\n      <input\n        type=\"date\"\n        name=\"birth\"\n        id=\"birth\"\n        max={props.death}\n        value={props.birth}\n        onChange={props.onChange}\n        className=\"input\"\n      />\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function DeathField(props) {\n  return (\n    <div className=\"field\">\n      <label htmlFor=\"died\" className=\"label is-medium\">\n        Died:\n      </label>\n      <input\n        type=\"date\"\n        name=\"death\"\n        id=\"death\"\n        min={props.birth}\n        value={props.death}\n        onChange={props.onChange}\n        className=\"input\"\n      />\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function LivedFields(props) {\n  return (\n    <div className=\"field-body\">\n      <div className=\"field\">\n        <label htmlFor=\"years\" className=\"label is-medium\">\n          Years Lived:\n        </label>\n        <input\n          type=\"number\"\n          inputMode=\"numeric\"\n          pattern=\"[0-9]*\"\n          name=\"years\"\n          id=\"yearsLived\"\n          value={props.lived.years}\n          onChange={props.onChange}\n          className=\"input\"\n          min=\"0\"\n        />\n      </div>\n      <div className=\"field\">\n        <label htmlFor=\"months\" className=\"label is-medium\">\n          Months Lived:\n        </label>\n        <input\n          type=\"number\"\n          inputMode=\"numeric\"\n          pattern=\"[0-9]*\"\n          name=\"months\"\n          id=\"monthsLived\"\n          value={props.lived.months}\n          onChange={props.onChange}\n          className=\"input\"\n          min=\"0\"\n          max=\"12\"\n        />\n      </div>\n      <div className=\"field\">\n        <label htmlFor=\"daysLived\" className=\"label is-medium\">\n          Days Lived:\n        </label>\n        <input\n          type=\"number\"\n          inputMode=\"numeric\"\n          pattern=\"[0-9]*\"\n          name=\"days\"\n          id=\"daysLived\"\n          value={props.lived.days}\n          onChange={props.onChange}\n          className=\"input\"\n          min=\"0\"\n          max=\"31\"\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport BirthField from \"./BirthField\";\nimport DeathField from \"./DeathField\";\nimport LivedFields from \"./LivedFields\";\nimport {\n  calculateTimeLived,\n  calculateDeathDate,\n  calculateBirthDate\n} from \"../../functions\";\n\nexport default class Form extends Component {\n  constructor(state) {\n    super(state);\n    this.submitForm = this.submitForm.bind(this);\n    this.inputChange = this.inputChange.bind(this);\n    this.livedChange = this.livedChange.bind(this);\n    this.state = {\n      birth: \"\",\n      death: \"\",\n      lived: {\n        years: \"\",\n        months: \"\",\n        days: \"\"\n      }\n    };\n  }\n\n  inputChange(e) {\n    const name = e.target.name;\n    this.setState({\n      [name]: e.target.value\n    });\n  }\n\n  livedChange(e) {\n    const name = e.target.name;\n    const updatedLived = { ...this.state.lived, [name]: e.target.value };\n\n    this.setState({\n      lived: updatedLived\n    });\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n    let message;\n    if (\n      (this.props.born === true) &\n      (this.props.died === true) &\n      (this.state.born !== \"\" && this.state.death !== \"\")\n    ) {\n      message = calculateTimeLived(this.state.birth, this.state.death);\n    } else if (\n      (this.props.born === true) &\n      (this.props.time === true) &\n      (this.state.born !== \"\" &&\n        this.state.lived.years !== \"\" &&\n        this.state.lived.months !== \"\" &&\n        this.state.lived.days !== \"\")\n    ) {\n      message = calculateDeathDate(this.state.birth, this.state.lived);\n    } else if (\n      (this.props.died === true) &\n      (this.props.time === true) &\n      (this.state.death !== \"\" &&\n        this.state.lived.years !== \"\" &&\n        this.state.lived.months !== \"\" &&\n        this.state.lived.days !== \"\")\n    ) {\n      message = calculateBirthDate(this.state.death, this.state.lived);\n    }\n    if (message) {\n      this.setState({\n        birth: \"\",\n        death: \"\",\n        lived: {\n          years: \"\",\n          months: \"\",\n          days: \"\"\n        }\n      });\n      this.props.submitHandler(message);\n    } else {\n      this.props.errorHandler(`Please enter valid values.`);\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.submitForm}>\n        <div className=\"field\">\n          <div className=\"field-body\">\n            {this.props.born === true && (\n              <BirthField\n                birth={this.state.birth}\n                death={this.state.death}\n                onChange={this.inputChange}\n              />\n            )}\n            {this.props.died === true && (\n              <DeathField\n                birth={this.state.birth}\n                death={this.state.death}\n                onChange={this.inputChange}\n              />\n            )}\n          </div>\n        </div>\n        <div className=\"field\">\n          {this.props.time === true && (\n            <LivedFields lived={this.state.lived} onChange={this.livedChange} />\n          )}\n        </div>\n        <div className=\"field\">\n          <input\n            type=\"submit\"\n            value=\"Submit\"\n            className=\"button is-primary is-medium is-fullwidth\"\n          />\n        </div>\n      </form>\n    );\n  }\n}\n","import moment from \"moment\";\n\nexport const calculateTimeLived = (birthDate, deathDate) => {\n    const birth = moment(birthDate);\n    const death = moment(deathDate);\n    const yearsLived = death.diff(birth, \"years\");\n    const monthsLived = death\n        .subtract(yearsLived, \"years\")\n        .diff(birth, \"months\");\n    const daysLived = death\n        .subtract(monthsLived, \"months\")\n        .diff(birth, \"days\");\n    return `Lived for ${yearsLived} years, ${monthsLived} months, and ${daysLived} days.`;\n}\n\nexport const calculateDeathDate = (birthDate, timeLived) => {\n    const death = moment(birthDate)\n        .add(timeLived.years, \"years\")\n        .add(timeLived.months, \"months\")\n        .add(timeLived.days, \"days\")\n        .format(\"dddd, MMMM Do YYYY\");\n    return `Died on ${death}.`;\n}\n\nexport const calculateBirthDate = (deathDate, timeLived) => {\n    const death = moment(deathDate);\n    const birth = death\n        .subtract(timeLived.years, \"years\")\n        .subtract(timeLived.months, \"months\")\n        .subtract(timeLived.days, \"days\")\n        .format(\"dddd, MMMM Do YYYY\");\n    return `Born on ${birth}.`;\n}","import React, { Component } from \"react\";\n\nexport default class Selector extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      born: this.props.born,\n      died: this.props.died,\n      time: this.props.time\n    };\n    // this.formSubmit = this.formSubmit.bind(this);\n    this.inputChange = this.inputChange.bind(this);\n  }\n\n  inputChange(e) {\n    const name = e.target.name;\n    const value = e.target.checked;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.props.onSubmit}>\n        <div className=\"field\">\n          <label className=\"label is-medium\">\n            What information do you have?\n          </label>\n          <div className=\"control\">\n            <label htmlFor=\"born\" className=\"checkbox \">\n              <input\n                type=\"checkbox\"\n                name=\"born\"\n                className=\"check\"\n                checked={this.state.born}\n                onChange={this.inputChange}\n              />\n              Born\n            </label>\n          </div>\n          <div className=\"control\">\n            <label htmlFor=\"died\" className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                name=\"died\"\n                className=\"check\"\n                checked={this.state.died}\n                onChange={this.inputChange}\n              />\n              Died\n            </label>\n          </div>\n          <div className=\"control\">\n            <label htmlFor=\"time\" className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                name=\"time\"\n                className=\"check\"\n                checked={this.state.time}\n                onChange={this.inputChange}\n              />\n              Time Lived\n            </label>\n          </div>\n        </div>\n        <div className=\"field\">\n          <input\n            type=\"submit\"\n            value=\"Update\"\n            className=\"button is-link is-medium is-fullwidth\"\n          />\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport Nav from \"./components/Nav\";\nimport InfoMessage from \"./components/messages/InfoMessage\";\nimport ErrorMessage from \"./components/messages/ErrorMessage\";\nimport Form from \"./components/Form\";\nimport Selector from \"./components/Selector\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"\",\n      error: \"\",\n      born: true,\n      died: true,\n      time: false\n    };\n    this.setMessage = this.setMessage.bind(this);\n    this.setError = this.setError.bind(this);\n    this.closeError = this.closeError.bind(this);\n    this.closeMessage = this.closeMessage.bind(this);\n    this.formSubmit = this.formSubmit.bind(this);\n  }\n\n  setError(msg) {\n    this.setState({ error: msg });\n  }\n\n  setMessage(msg) {\n    this.setState({ message: msg });\n    this.closeError();\n  }\n\n  closeError(e) {\n    this.setState({ error: \"\" });\n  }\n\n  closeMessage(e) {\n    e.preventDefault();\n    this.setState({ message: \"\" });\n  }\n\n  updateView(components) {\n    this.setState({ components });\n  }\n\n  formSubmit(e) {\n    e.preventDefault();\n    const checkboxes = e.target.querySelectorAll(\"input[type='checkbox']\");\n    let fields = {};\n    checkboxes.forEach(checkbox => {\n      fields = { ...fields, [checkbox.name]: checkbox.checked };\n    });\n    if (fields.born === true && fields.died === true && fields.time === true) {\n      this.setError(\"Please only choose two fields.\");\n    } else {\n      this.closeError();\n      this.setState(fields);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav />\n        <section className=\"section container\">\n          {this.state.error !== \"\" && (\n            <ErrorMessage\n              message={this.state.error}\n              closeHandler={this.closeError}\n            />\n          )}\n          <Selector\n            born={this.state.born}\n            died={this.state.died}\n            time={this.state.time}\n            onSubmit={this.formSubmit}\n          />\n          <br />\n          {this.state.message !== \"\" && (\n            <InfoMessage\n              message={this.state.message}\n              closeHandler={this.closeMessage}\n            />\n          )}\n\n          <Form\n            submitHandler={this.setMessage}\n            errorHandler={this.setError}\n            born={this.state.born}\n            died={this.state.died}\n            time={this.state.time}\n          />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}